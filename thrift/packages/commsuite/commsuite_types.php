<?php
/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
include_once $GLOBALS['THRIFT_ROOT'].'/Thrift.php';


class commsuite_MessageView {
  static $_TSPEC;

  public $type = null;
  public $subtype = null;
  public $emailbody = null;
  public $emailsubject = null;
  public $emailfromname = null;
  public $emailfromaddress = null;
  public $phonetodo = null;
  public $smsbody = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'type',
          'type' => TType::STRING,
          ),
        2 => array(
          'var' => 'subtype',
          'type' => TType::STRING,
          ),
        3 => array(
          'var' => 'emailbody',
          'type' => TType::STRING,
          ),
        4 => array(
          'var' => 'emailsubject',
          'type' => TType::STRING,
          ),
        5 => array(
          'var' => 'emailfromname',
          'type' => TType::STRING,
          ),
        6 => array(
          'var' => 'emailfromaddress',
          'type' => TType::STRING,
          ),
        7 => array(
          'var' => 'phonetodo',
          'type' => TType::STRING,
          ),
        8 => array(
          'var' => 'smsbody',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      if (isset($vals['type'])) {
        $this->type = $vals['type'];
      }
      if (isset($vals['subtype'])) {
        $this->subtype = $vals['subtype'];
      }
      if (isset($vals['emailbody'])) {
        $this->emailbody = $vals['emailbody'];
      }
      if (isset($vals['emailsubject'])) {
        $this->emailsubject = $vals['emailsubject'];
      }
      if (isset($vals['emailfromname'])) {
        $this->emailfromname = $vals['emailfromname'];
      }
      if (isset($vals['emailfromaddress'])) {
        $this->emailfromaddress = $vals['emailfromaddress'];
      }
      if (isset($vals['phonetodo'])) {
        $this->phonetodo = $vals['phonetodo'];
      }
      if (isset($vals['smsbody'])) {
        $this->smsbody = $vals['smsbody'];
      }
    }
  }

  public function getName() {
    return 'MessageView';
  }

  public function read($input)
  {
    $xfer = 0;
    $fname = null;
    $ftype = 0;
    $fid = 0;
    $xfer += $input->readStructBegin($fname);
    while (true)
    {
      $xfer += $input->readFieldBegin($fname, $ftype, $fid);
      if ($ftype == TType::STOP) {
        break;
      }
      switch ($fid)
      {
        case 1:
          if ($ftype == TType::STRING) {
            $xfer += $input->readString($this->type);
          } else {
            $xfer += $input->skip($ftype);
          }
          break;
        case 2:
          if ($ftype == TType::STRING) {
            $xfer += $input->readString($this->subtype);
          } else {
            $xfer += $input->skip($ftype);
          }
          break;
        case 3:
          if ($ftype == TType::STRING) {
            $xfer += $input->readString($this->emailbody);
          } else {
            $xfer += $input->skip($ftype);
          }
          break;
        case 4:
          if ($ftype == TType::STRING) {
            $xfer += $input->readString($this->emailsubject);
          } else {
            $xfer += $input->skip($ftype);
          }
          break;
        case 5:
          if ($ftype == TType::STRING) {
            $xfer += $input->readString($this->emailfromname);
          } else {
            $xfer += $input->skip($ftype);
          }
          break;
        case 6:
          if ($ftype == TType::STRING) {
            $xfer += $input->readString($this->emailfromaddress);
          } else {
            $xfer += $input->skip($ftype);
          }
          break;
        case 7:
          if ($ftype == TType::STRING) {
            $xfer += $input->readString($this->phonetodo);
          } else {
            $xfer += $input->skip($ftype);
          }
          break;
        case 8:
          if ($ftype == TType::STRING) {
            $xfer += $input->readString($this->smsbody);
          } else {
            $xfer += $input->skip($ftype);
          }
          break;
        default:
          $xfer += $input->skip($ftype);
          break;
      }
      $xfer += $input->readFieldEnd();
    }
    $xfer += $input->readStructEnd();
    return $xfer;
  }

  public function write($output) {
    $xfer = 0;
    $xfer += $output->writeStructBegin('MessageView');
    if ($this->type !== null) {
      $xfer += $output->writeFieldBegin('type', TType::STRING, 1);
      $xfer += $output->writeString($this->type);
      $xfer += $output->writeFieldEnd();
    }
    if ($this->subtype !== null) {
      $xfer += $output->writeFieldBegin('subtype', TType::STRING, 2);
      $xfer += $output->writeString($this->subtype);
      $xfer += $output->writeFieldEnd();
    }
    if ($this->emailbody !== null) {
      $xfer += $output->writeFieldBegin('emailbody', TType::STRING, 3);
      $xfer += $output->writeString($this->emailbody);
      $xfer += $output->writeFieldEnd();
    }
    if ($this->emailsubject !== null) {
      $xfer += $output->writeFieldBegin('emailsubject', TType::STRING, 4);
      $xfer += $output->writeString($this->emailsubject);
      $xfer += $output->writeFieldEnd();
    }
    if ($this->emailfromname !== null) {
      $xfer += $output->writeFieldBegin('emailfromname', TType::STRING, 5);
      $xfer += $output->writeString($this->emailfromname);
      $xfer += $output->writeFieldEnd();
    }
    if ($this->emailfromaddress !== null) {
      $xfer += $output->writeFieldBegin('emailfromaddress', TType::STRING, 6);
      $xfer += $output->writeString($this->emailfromaddress);
      $xfer += $output->writeFieldEnd();
    }
    if ($this->phonetodo !== null) {
      $xfer += $output->writeFieldBegin('phonetodo', TType::STRING, 7);
      $xfer += $output->writeString($this->phonetodo);
      $xfer += $output->writeFieldEnd();
    }
    if ($this->smsbody !== null) {
      $xfer += $output->writeFieldBegin('smsbody', TType::STRING, 8);
      $xfer += $output->writeString($this->smsbody);
      $xfer += $output->writeFieldEnd();
    }
    $xfer += $output->writeFieldStop();
    $xfer += $output->writeStructEnd();
    return $xfer;
  }

}

?>
