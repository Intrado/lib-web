<?php
/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
include_once $GLOBALS['THRIFT_ROOT'].'/Thrift.php';


class commsuite_RenderException extends TException {
  static $_TSPEC;


  public function __construct() {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        );
    }
  }

  public function getName() {
    return 'RenderException';
  }

  public function read($input)
  {
    $xfer = 0;
    $fname = null;
    $ftype = 0;
    $fid = 0;
    $xfer += $input->readStructBegin($fname);
    while (true)
    {
      $xfer += $input->readFieldBegin($fname, $ftype, $fid);
      if ($ftype == TType::STOP) {
        break;
      }
      switch ($fid)
      {
        default:
          $xfer += $input->skip($ftype);
          break;
      }
      $xfer += $input->readFieldEnd();
    }
    $xfer += $input->readStructEnd();
    return $xfer;
  }

  public function write($output) {
    $xfer = 0;
    $xfer += $output->writeStructBegin('RenderException');
    $xfer += $output->writeFieldStop();
    $xfer += $output->writeStructEnd();
    return $xfer;
  }

}

class commsuite_EmailTemplate {
  static $_TSPEC;

  public $fromname = null;
  public $fromaddr = null;
  public $subject = null;
  public $body = null;
  public $htmlbody = null;
  public $languagecode = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'fromname',
          'type' => TType::STRING,
          ),
        2 => array(
          'var' => 'fromaddr',
          'type' => TType::STRING,
          ),
        3 => array(
          'var' => 'subject',
          'type' => TType::STRING,
          ),
        4 => array(
          'var' => 'body',
          'type' => TType::STRING,
          ),
        5 => array(
          'var' => 'htmlbody',
          'type' => TType::STRING,
          ),
        6 => array(
          'var' => 'languagecode',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      if (isset($vals['fromname'])) {
        $this->fromname = $vals['fromname'];
      }
      if (isset($vals['fromaddr'])) {
        $this->fromaddr = $vals['fromaddr'];
      }
      if (isset($vals['subject'])) {
        $this->subject = $vals['subject'];
      }
      if (isset($vals['body'])) {
        $this->body = $vals['body'];
      }
      if (isset($vals['htmlbody'])) {
        $this->htmlbody = $vals['htmlbody'];
      }
      if (isset($vals['languagecode'])) {
        $this->languagecode = $vals['languagecode'];
      }
    }
  }

  public function getName() {
    return 'EmailTemplate';
  }

  public function read($input)
  {
    $xfer = 0;
    $fname = null;
    $ftype = 0;
    $fid = 0;
    $xfer += $input->readStructBegin($fname);
    while (true)
    {
      $xfer += $input->readFieldBegin($fname, $ftype, $fid);
      if ($ftype == TType::STOP) {
        break;
      }
      switch ($fid)
      {
        case 1:
          if ($ftype == TType::STRING) {
            $xfer += $input->readString($this->fromname);
          } else {
            $xfer += $input->skip($ftype);
          }
          break;
        case 2:
          if ($ftype == TType::STRING) {
            $xfer += $input->readString($this->fromaddr);
          } else {
            $xfer += $input->skip($ftype);
          }
          break;
        case 3:
          if ($ftype == TType::STRING) {
            $xfer += $input->readString($this->subject);
          } else {
            $xfer += $input->skip($ftype);
          }
          break;
        case 4:
          if ($ftype == TType::STRING) {
            $xfer += $input->readString($this->body);
          } else {
            $xfer += $input->skip($ftype);
          }
          break;
        case 5:
          if ($ftype == TType::STRING) {
            $xfer += $input->readString($this->htmlbody);
          } else {
            $xfer += $input->skip($ftype);
          }
          break;
        case 6:
          if ($ftype == TType::STRING) {
            $xfer += $input->readString($this->languagecode);
          } else {
            $xfer += $input->skip($ftype);
          }
          break;
        default:
          $xfer += $input->skip($ftype);
          break;
      }
      $xfer += $input->readFieldEnd();
    }
    $xfer += $input->readStructEnd();
    return $xfer;
  }

  public function write($output) {
    $xfer = 0;
    $xfer += $output->writeStructBegin('EmailTemplate');
    if ($this->fromname !== null) {
      $xfer += $output->writeFieldBegin('fromname', TType::STRING, 1);
      $xfer += $output->writeString($this->fromname);
      $xfer += $output->writeFieldEnd();
    }
    if ($this->fromaddr !== null) {
      $xfer += $output->writeFieldBegin('fromaddr', TType::STRING, 2);
      $xfer += $output->writeString($this->fromaddr);
      $xfer += $output->writeFieldEnd();
    }
    if ($this->subject !== null) {
      $xfer += $output->writeFieldBegin('subject', TType::STRING, 3);
      $xfer += $output->writeString($this->subject);
      $xfer += $output->writeFieldEnd();
    }
    if ($this->body !== null) {
      $xfer += $output->writeFieldBegin('body', TType::STRING, 4);
      $xfer += $output->writeString($this->body);
      $xfer += $output->writeFieldEnd();
    }
    if ($this->htmlbody !== null) {
      $xfer += $output->writeFieldBegin('htmlbody', TType::STRING, 5);
      $xfer += $output->writeString($this->htmlbody);
      $xfer += $output->writeFieldEnd();
    }
    if ($this->languagecode !== null) {
      $xfer += $output->writeFieldBegin('languagecode', TType::STRING, 6);
      $xfer += $output->writeString($this->languagecode);
      $xfer += $output->writeFieldEnd();
    }
    $xfer += $output->writeFieldStop();
    $xfer += $output->writeStructEnd();
    return $xfer;
  }

}

?>
